@page "/booking-summary"
@inject CSE325_team.Data.ApplicationDbContext DbContext
@using Microsoft.EntityFrameworkCore
@inject NavigationManager Navigation
@inject CSE325_team.Services.BookingState BookingState

@using CSE325_team.Models

<PageTitle>Booking Summary</PageTitle>

<h2 class="booking-title">Booking Confirmation</h2>
@if (string.IsNullOrEmpty(BookingState.CustomerName) || BookingState.VehicleId == 0)
{
    <div class="alert alert-warning">
        No booking data found. Please <a href="/booking">start a new booking</a>.
    </div>
}
else
{
    <div class="booking-form-wrapper">
        <div class="booking-summary">
            <h4>Booking Details</h4>
            <table>
                <tr>
                    <td>Vehicle</td>
                    <td>@BookingState.VehicleDisplay</td>
                </tr>
                <tr>
                    <td>Daily Rate</td>
                    <td>@BookingState.DailyRate.ToString("C")</td>
                </tr>
                <tr>
                    <td>Days</td>
                    <td>@((BookingState.DropOffDate - BookingState.PickupDate).Days)</td>
                </tr>
                <tr>
                    <td>Subtotal</td>
                    <td>@BookingState.Subtotal.ToString("C")</td>
                </tr>
                <tr>
                    <td>Tax (18%)</td>
                    <td>@BookingState.Tax.ToString("C")</td>
                </tr>
                <tr class="summary-total">
                    <td><strong>Total</strong></td>
                    <td><strong>@BookingState.TotalPrice.ToString("C")</strong></td>
                </tr>
            </table>
            <div class="summary-details">
                <span><b>Pick-up:</b> @BookingState.PickupDate.ToShortDateString()</span>
                <span><b>Drop-off:</b> @BookingState.DropOffDate.ToShortDateString()</span>
                <span><b>Customer:</b> @BookingState.CustomerName</span>
                <span><b>Payment:</b> @BookingState.PaymentMethod</span>
            </div>
            <button class="btn btn-confirm" @onclick="ConfirmAndSave">Confirm & Book</button>
        </div>
    </div>
}

@code {
    private async Task ConfirmAndSave()
    {
        var days = (BookingState.DropOffDate - BookingState.PickupDate).Days;
        if (days <= 0) days = 1;

        var booking = new Booking
        {
            VehicleId = BookingState.VehicleId,
            PickupDate = BookingState.PickupDate,
            DropOffDate = BookingState.DropOffDate,
            TotalPrice = BookingState.TotalPrice,
            // Replace with real user ID if authenticated
            UserId = "demoUser",
        };

        DbContext.Booking.Add(booking);
        await DbContext.SaveChangesAsync();

        Navigation.NavigateTo("/booking-success");
    }
}